
Sure, here's an example of how you could create an accordion in React with the trigger element .accordion-header and the expanding part of the accordion being .accordion-expand. This example uses React hooks to manage the state of the accordion.



import React, { useState } from 'react';

function Accordion() {
  const [isExpanded, setIsExpanded] = useState(false);

  function toggleAccordion() {
    setIsExpanded(!isExpanded);
  }

  return (
    <div className="accordion">
      <div className="accordion-header" onClick={toggleAccordion}>
        Click to Expand/Collapse
      </div>
      {isExpanded && (
        <div className="accordion-expand">
          This is the expanding part of the accordion.
        </div>
      )}
    </div>
  );
}

export default Accordion;


In this example, we define a state variable isExpanded which determines whether the accordion is open or closed. We also define a function toggleAccordion which will be called when the .accordion-header element is clicked, and it will toggle the value of isExpanded.

The return statement in the Accordion component renders the .accordion-header element, which when clicked will call the toggleAccordion function. The isExpanded value is used to conditionally render the .accordion-expand element. If isExpanded is true, then the .accordion-expand element will be displayed, otherwise it will be hidden.